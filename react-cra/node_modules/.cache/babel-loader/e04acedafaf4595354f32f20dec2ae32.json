{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bon300-19\\\\Desktop\\\\react-for-beginners\\\\react-cra\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Button from './Button';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hello() {\n  _s();\n\n  /*\r\n  function destroyedFn(){\r\n    console.log(\"destroyed :(\");\r\n  }\r\n  function effectFn(){\r\n    console.log(\"created :)\");\r\n    return destroyedFn; // component가 파괴될 때 반환\r\n  }\r\n  useEffect(effectFn, []); \r\n  // state가 변화할 때 실행([] 빈 arr 이기 때문에 시작 떄만 실행)\r\n  */\n\n  /* 이의 과정을 풀어서 쓴 것이 위의 과정.\r\n  useEffect(() => {\r\n    console.log(\"created :)\");\r\n   return () => console.log(\"destroyed :(\");\r\n  }, []);*/\n  // 주로 react를 사용할 떄는 따로 function을 작성하지않고 useEffect에 작성\n  // useEffect(() => {\n  //   console.log(\"hi\");\n  //   return () => console.log(\"bye\");\n  // }, []);\n  useEffect(function () {\n    console.log(\"hi\");\n    return function () {\n      console.log(\"bye\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Hello, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Hello;\n\nfunction App() {\n  _s2();\n\n  const [showing, setShowing] = useState(false);\n\n  const onClick = () => {\n    setShowing(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showing ? /*#__PURE__*/_jsxDEV(Hello, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      showing: showing,\n      click: onClick,\n      text: \"Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"ZGmcKw9rD9kShTa3xksTCmQA528=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hello\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/bon300-19/Desktop/react-for-beginners/react-cra/src/App.js"],"names":["Button","useState","useEffect","Hello","console","log","App","showing","setShowing","onClick","prev"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AAEAD,EAAAA,SAAS,CAAC,YAAW;AACnBE,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAO,YAAW;AAChBD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlCQF,K;;KAAAA,K;;AAoCT,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMQ,OAAO,GAAG,MAAM;AAACD,IAAAA,UAAU,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAAV;AAA4B,GAAnD;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGH,OAAO,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAe,IADzB,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,OAAjB;AAA0B,MAAA,KAAK,EAAEE,OAAjC;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;IATQH,G;;MAAAA,G;AAWT,eAAeA,GAAf","sourcesContent":["import Button from './Button';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Hello() {\r\n  /*\r\n  function destroyedFn(){\r\n    console.log(\"destroyed :(\");\r\n  }\r\n  function effectFn(){\r\n    console.log(\"created :)\");\r\n    return destroyedFn; // component가 파괴될 때 반환\r\n  }\r\n  useEffect(effectFn, []); \r\n  // state가 변화할 때 실행([] 빈 arr 이기 때문에 시작 떄만 실행)\r\n  */\r\n  \r\n  /* 이의 과정을 풀어서 쓴 것이 위의 과정.\r\n  useEffect(() => {\r\n    console.log(\"created :)\");\r\n   return () => console.log(\"destroyed :(\");\r\n  }, []);*/\r\n\r\n\r\n  // 주로 react를 사용할 떄는 따로 function을 작성하지않고 useEffect에 작성\r\n  // useEffect(() => {\r\n  //   console.log(\"hi\");\r\n  //   return () => console.log(\"bye\");\r\n  // }, []);\r\n\r\n  useEffect(function() {\r\n    console.log(\"hi\");\r\n    return function() {\r\n      console.log(\"bye\");\r\n    };\r\n  }, []);\r\n    \r\n  return <h1>Hello</h1>;\r\n}\r\n\r\nfunction App() {\r\n  const [showing, setShowing] = useState(false);\r\n  const onClick = () => {setShowing((prev) => !prev)}\r\n  return (\r\n    <div className=\"App\">\r\n      {showing ? <Hello /> : null}\r\n      <Button showing={showing} click={onClick} text='Show'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
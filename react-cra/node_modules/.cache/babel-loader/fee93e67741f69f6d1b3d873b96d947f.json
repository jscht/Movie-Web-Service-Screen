{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bon300-19\\\\Desktop\\\\react-for-beginners\\\\react-cra\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Button from './Button';\nimport styles from \"./App.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [value, setValue] = useState(0);\n\n  const prevValue = () => setValue(prev => prev + 1); // react를 import하여 React. 이 붙지않아도 사용가능\n  // state가 변할 때마다 state에 해당되는 컴포넌트들은 모두 리랜더링된다.\n  // 그래야 새로 수정된 UI를 볼 수 있기 때문.\n  // 가끔은 처음 render할 때만 코드를 실행되도록 하고 싶은 것도 있을 것이다.\n  // 예를들어 API를 호출할 때라던가.\n  // 특정 코드의 실행을 제한하려면 어떻게 해야할까? -> useEffect\n  // 첫 번째 argu: 딱 한번만 실행하고싶은 코드/함수..\n  // 두 번쨰 argu: ??배열\n\n\n  console.log(\"render.\"); // const iRunOnlyOnce = () => {\n  //   console.log(\"i run only once.\")\n  // };\n  // useEffect(iRunOnlyOnce, []);\n\n  useEffect(() => {\n    console.log(\"call the api\");\n  }, []); // 이처럼 한번만 코드를 실행해야하거나 하고싶은 코드를 이런식으로 쓸 수 있다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Welcome to React!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Tour of CRA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        text: \"text\",\n        placeholder: \"Search here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        click: prevValue,\n        text: \"click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QEMGEmq5Rfwf2KLuWFF3dZYTA2c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bon300-19/Desktop/react-for-beginners/react-cra/src/App.js"],"names":["Button","styles","useState","useEffect","App","value","setValue","prevValue","prev","console","log","title"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMK,SAAS,GAAG,MAAMD,QAAQ,CAAEE,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAhC,CAFa,CAGb;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAda,CAgBb;AACA;AACA;AACA;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GAFQ,EAEN,EAFM,CAAT,CArBa,CAwBb;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAET,MAAM,CAACU,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAE+B;AAAA;AAAA;AAAA;AAAA,YAF/B,eAIE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEE,SAAf;AAA0B,QAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvCQH,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import Button from './Button';\r\nimport styles from \"./App.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState(0);\r\n  const prevValue = () => setValue((prev) => prev + 1);\r\n  // react를 import하여 React. 이 붙지않아도 사용가능\r\n  // state가 변할 때마다 state에 해당되는 컴포넌트들은 모두 리랜더링된다.\r\n  // 그래야 새로 수정된 UI를 볼 수 있기 때문.\r\n\r\n  // 가끔은 처음 render할 때만 코드를 실행되도록 하고 싶은 것도 있을 것이다.\r\n  // 예를들어 API를 호출할 때라던가.\r\n  // 특정 코드의 실행을 제한하려면 어떻게 해야할까? -> useEffect\r\n\r\n  // 첫 번째 argu: 딱 한번만 실행하고싶은 코드/함수..\r\n  // 두 번쨰 argu: ??배열\r\n  \r\n  console.log(\"render.\")\r\n\r\n  // const iRunOnlyOnce = () => {\r\n  //   console.log(\"i run only once.\")\r\n  // };\r\n  // useEffect(iRunOnlyOnce, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"call the api\")\r\n  }, []);\r\n  // 이처럼 한번만 코드를 실행해야하거나 하고싶은 코드를 이런식으로 쓸 수 있다.\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className={styles.title}>Welcome to React!</h1>\r\n      <Button text=\"Tour of CRA\" /><br/>\r\n\r\n      <div>\r\n        <input text=\"text\" placeholder='Search here...' />\r\n        <h3>{value}</h3>\r\n        <Button click={prevValue} text=\"click me!\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}